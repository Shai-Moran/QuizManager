[{"C:\\Yahalom\\projects\\QuizManager\\client\\src\\index.js":"1","C:\\Yahalom\\projects\\QuizManager\\client\\src\\App.js":"2","C:\\Yahalom\\projects\\QuizManager\\client\\src\\reportWebVitals.js":"3","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\TestManager\\TestFieldMenu.js":"4","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\TestManager\\TestManager.js":"5","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestion.js":"6","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\NewTest.js":"7","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\QuestionManager\\QuestionManager.js":"8","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\getFieldsService.js":"9","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\newTestService.js":"10","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\allTestsService.js":"11","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\TestManager\\TestRow\\TestRow.js":"12","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\NewTestForm\\NewTestForm.js":"13","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\EmailForm.js":"14","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestionForm.js":"15","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\QuestionSelector\\QuestionSelector.js":"16","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\questionService.ts":"17","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\allQuestionsService.js":"18","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\QuestionManager\\QuestionRow.js":"19","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\emailTamplate.js":"20","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\QuestionSelector\\QuestionSelectorRow.js":"21","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\Answer\\Answer.js":"22","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\httpService.js":"23","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\UI\\TextEditor\\TextEditor.js":"24","C:\\Yahalom\\projects\\QuizManager\\client\\src\\environments\\environment.js":"25","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\UpdateQuestion\\UpdateQuestion.js":"26","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\UpdateTest\\UpdateTest.js":"27","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\getTestById.js":"28","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\UpdateTest\\UpdateEmail\\UpdateEmailForm.js":"29","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\UpdateTest\\UpdateTestForm.js\\UpdateTestForm.js":"30"},{"size":565,"mtime":1645005696053,"results":"31","hashOfConfig":"32"},{"size":1243,"mtime":1645700631773,"results":"33","hashOfConfig":"32"},{"size":375,"mtime":1645005696054,"results":"34","hashOfConfig":"32"},{"size":1142,"mtime":1645373453182,"results":"35","hashOfConfig":"32"},{"size":1994,"mtime":1645646046297,"results":"36","hashOfConfig":"32"},{"size":3811,"mtime":1645633277213,"results":"37","hashOfConfig":"32"},{"size":4245,"mtime":1645699720610,"results":"38","hashOfConfig":"32"},{"size":2093,"mtime":1645698077710,"results":"39","hashOfConfig":"32"},{"size":228,"mtime":1645085691163,"results":"40","hashOfConfig":"32"},{"size":211,"mtime":1645031532926,"results":"41","hashOfConfig":"32"},{"size":261,"mtime":1645372852346,"results":"42","hashOfConfig":"32"},{"size":970,"mtime":1645699424476,"results":"43","hashOfConfig":"32"},{"size":2967,"mtime":1645095368886,"results":"44","hashOfConfig":"32"},{"size":1853,"mtime":1645095393590,"results":"45","hashOfConfig":"32"},{"size":2992,"mtime":1645698077709,"results":"46","hashOfConfig":"32"},{"size":2603,"mtime":1645644808785,"results":"47","hashOfConfig":"32"},{"size":587,"mtime":1645283024196,"results":"48","hashOfConfig":"32"},{"size":226,"mtime":1645625794422,"results":"49","hashOfConfig":"32"},{"size":631,"mtime":1645698077710,"results":"50","hashOfConfig":"32"},{"size":202,"mtime":1645009580461,"results":"51","hashOfConfig":"32"},{"size":2485,"mtime":1645645292975,"results":"52","hashOfConfig":"32"},{"size":656,"mtime":1645619739575,"results":"53","hashOfConfig":"32"},{"size":614,"mtime":1645005696054,"results":"54","hashOfConfig":"32"},{"size":707,"mtime":1645005696051,"results":"55","hashOfConfig":"32"},{"size":61,"mtime":1645005696053,"results":"56","hashOfConfig":"32"},{"size":102,"mtime":1645698077711,"results":"57","hashOfConfig":"32"},{"size":5281,"mtime":1645705718110,"results":"58","hashOfConfig":"32"},{"size":241,"mtime":1645700876458,"results":"59","hashOfConfig":"32"},{"size":1887,"mtime":1645705546382,"results":"60","hashOfConfig":"32"},{"size":3137,"mtime":1645705712118,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"126a1o2",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"71"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"71"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"71"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"71"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"71"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"71"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"71"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Yahalom\\projects\\QuizManager\\client\\src\\index.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\App.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\reportWebVitals.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\TestManager\\TestFieldMenu.js",["133","134","135"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Header, Select } from 'semantic-ui-react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport getFieldsService from '../../services/getFieldsService';\r\n\r\nconst TestFieldMenu = () => {\r\n  const navigation = useNavigate();\r\n  const [fields, setFields] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    var fieldsData = await getFieldsService.getFields();\r\n    fieldsData.data.map((f) => {\r\n      setFields((prevState) => [\r\n        ...prevState,\r\n        { key: f.fieldName, value: f.fieldName, text: f.fieldName }\r\n      ]);\r\n    });\r\n  }, []);\r\n\r\n  const onSelectFieldHandler = (e) => {\r\n    navigation(`/tests?field=${e.target.innerText}`);\r\n  };\r\n\r\n  return (\r\n    <Container textAlign=\"left\">\r\n      <Header as=\"h1\">Welcome to QuizManager!</Header>\r\n      <Header as=\"h3\">Please select the field of tests:</Header>\r\n      <Select\r\n        options={fields}\r\n        selection\r\n        placeholder=\"Select a Field\"\r\n        options={fields}\r\n        onChange={onSelectFieldHandler}\r\n      ></Select>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TestFieldMenu;\r\n",["136","137"],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\TestManager\\TestManager.js",["138","139","140","141"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Table, Input, Header } from 'semantic-ui-react';\r\nimport TestRow from './TestRow/TestRow';\r\nimport allTestsService from '../../services/allTestsService';\r\n\r\nconst TestManager = () => {\r\n  const [tests, setTests] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(async () => {\r\n    setTests([]);\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const field = urlParams.get('field');\r\n    var testsData = await allTestsService.getAllTests(field);\r\n    testsData.data.map((test) => {\r\n      setTests((prevState) => [...prevState, test]);\r\n    });\r\n    if (search !== '') {\r\n      setTests([]);\r\n      testsData.data.map((test) => {\r\n        if (test.name.includes(search)) {\r\n          setTests((prevState) => [...prevState, test]);\r\n        }\r\n      });\r\n    }\r\n  }, [search]);\r\n\r\n  return (\r\n    <div>\r\n      <Header textAlign=\"left\" as=\"h1\">\r\n        Test Managet:\r\n      </Header>\r\n      <Input\r\n        icon=\"search\"\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        type=\"text\"\r\n        placeholder=\"Search for test by name:\"\r\n      />\r\n      <Table celled selectable>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Name</Table.HeaderCell>\r\n            <Table.HeaderCell>Number Of Questions</Table.HeaderCell>\r\n            <Table.HeaderCell>Last Updated</Table.HeaderCell>\r\n            <Table.HeaderCell></Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {tests.map((test) => {\r\n            return (\r\n              <TestRow\r\n                id={test.id}\r\n                testUrl={test.testUrl}\r\n                name={test.name}\r\n                numOfQuestions={test.questions.length}\r\n                lastUpdated={test.lastUpdated}\r\n              />\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TestManager;\r\n","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestion.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\NewTest.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\QuestionManager\\QuestionManager.js",["142","143","144","145","146","147"],"import React, { useEffect, useState } from 'react';\r\nimport { Button, Table } from 'semantic-ui-react';\r\nimport getAllQuestions from '../../services/allQuestionsService';\r\nimport QuestionRow from './QuestionRow';\r\n\r\nconst QuestionManager = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [tags, setTags] = useState('');\r\n\r\n  useEffect(async () => {\r\n   const allQuestions = await getAllQuestions.getAllQuestions()\r\n   allQuestions.data.map((question) => {\r\n     setQuestions((prevState) => [...prevState, question])\r\n   })\r\n   if (tags !== ''){\r\n    const myTags = tags.split(\", \")\r\n     setQuestions([])\r\n     allQuestions.data.map(question => {\r\n       myTags.map(tag => {\r\n         question.tags.map(t => {\r\n           if(tag === t){\r\n            setQuestions((prevState) => [...prevState, question])\r\n           }\r\n         })\r\n       })\r\n     })\r\n   } \r\n  }, [tags])\r\n  \r\n  return (\r\n    <div>\r\n      <h1>Question Manager</h1>\r\n      search by tag: <input type='text' onChange={e => setTags(e.target.value)}/>\r\n<Table celled selectable>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell>Question Type</Table.HeaderCell>\r\n          <Table.HeaderCell>Title</Table.HeaderCell>\r\n          <Table.HeaderCell>Content</Table.HeaderCell>\r\n          <Table.HeaderCell>Answers</Table.HeaderCell>\r\n          <Table.HeaderCell>View Answers</Table.HeaderCell>\r\n          <Table.HeaderCell>Tags</Table.HeaderCell>\r\n          <Table.HeaderCell>Points</Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n      <Table.Body>\r\n        {questions.map((question) => {\r\n          return (\r\n            <QuestionRow\r\n              questionType={question.questionType}\r\n              title={question.title}\r\n              content={question.content}\r\n              //answers={question.answers}\r\n              viewAnswers={question.viewAnswers}\r\n              tags={question.tags}\r\n              points={question.points}\r\n            />\r\n          );\r\n        })}\r\n      </Table.Body>\r\n    </Table>\r\n    </div>\r\n  );    \r\n};\r\n \r\nexport default QuestionManager","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\getFieldsService.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\newTestService.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\allTestsService.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\TestManager\\TestRow\\TestRow.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\NewTestForm\\NewTestForm.js",["148","149"],"import { useState, useEffect } from 'react';\r\nimport { Header, Form } from 'semantic-ui-react';\r\nimport TextEditor from '../../UI/TextEditor/TextEditor';\r\nimport getFieldsService from '../../../services/getFieldsService';\r\n\r\nconst NewTestForm = (props) => {\r\n  const [fields, setFields] = useState([]);\r\n  const languageOptions = [\r\n    { key: 'hebrew', value: 'hebrew', text: 'Hebrew' },\r\n    { key: 'english', value: 'english', text: 'English' }\r\n  ];\r\n\r\n  useEffect(async () => {\r\n    var fieldsData = await getFieldsService.getFields();\r\n    fieldsData.data.map((f) => {\r\n      setFields((prevState) => [\r\n        ...prevState,\r\n        { key: f.fieldName, value: f.fieldName, text: f.fieldName }\r\n      ]);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Form>\r\n      <Header textAlign=\"left\">\r\n        Field:\r\n        <Form.Select\r\n          error={props.fieldError}\r\n          selection\r\n          placeholder=\"Select a Field\"\r\n          options={fields}\r\n          onChange={(e) => props.setField(e.target.innerText)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Language:\r\n        <Form.Select\r\n          error={props.languageError}\r\n          selection\r\n          placeholder=\"Select a Language\"\r\n          options={languageOptions}\r\n          onChange={(e) => props.setLenguage(e.target.innerText)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Test Name:\r\n        <Form.Input\r\n          error={props.nameError}\r\n          fluid\r\n          placeholder=\"Test Name\"\r\n          onChange={(e) => props.setName(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Creater Email:\r\n        <Form.Input\r\n          error={props.emailError}\r\n          fluid\r\n          placeholder=\"Email\"\r\n          onChange={(e) => props.setEmail(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Passing Grade:\r\n        <Form.Input\r\n          error={props.passingGradeError}\r\n          fluid\r\n          type=\"Number\"\r\n          onChange={(e) => props.setPassingGrade(e.target.value)}\r\n        />\r\n      </Header>\r\n      <div className=\"wysiwyg-input\">\r\n        <Header textAlign=\"left\" as=\"h2\">\r\n          Header\r\n        </Header>\r\n        <TextEditor\r\n          editorState={props.header}\r\n          setEditorState={props.setHeader}\r\n        />\r\n      </div>\r\n      <div className=\"wysiwyg-input\">\r\n        <Header textAlign=\"left\" as=\"h2\">\r\n          Message to show on success:\r\n        </Header>\r\n        <TextEditor\r\n          editorState={props.successMsg}\r\n          setEditorState={props.setSuccessMsg}\r\n        />\r\n      </div>\r\n      <div className=\"wysiwyg-input\">\r\n        <Header textAlign=\"left\" as=\"h2\">\r\n          Message to show on failure:\r\n        </Header>\r\n        <TextEditor\r\n          editorState={props.failMsg}\r\n          setEditorState={props.setFailMsg}\r\n        />\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default NewTestForm;\r\n","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\EmailForm.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestionForm.js",["150","151"],"import React, { useState, useEffect } from 'react';\r\nimport './NewQuestionForm.css';\r\nimport { Header, Form } from 'semantic-ui-react';\r\nimport Answer from '../Answer/Answer';\r\n\r\nconst NewQuestionForm = (props) => {\r\n  const questionType = [\r\n    {\r\n      key: 'SingleChoiceQuestion',\r\n      value: 'SingleChoiceQuestion',\r\n      text: 'SingleChoiceQuestion'\r\n    },\r\n    {\r\n      key: 'MultipleSelectionQuestion',\r\n      value: 'MultipleSelectionQuestion',\r\n      text: 'MultipleSelectionQuestion'\r\n    }\r\n  ];\r\n  const viewAnswers = [\r\n    { key: 'Horizontal', value: 'Horizontal', text: 'Horizontal' },\r\n    { key: 'Vertical', value: 'Vertical', text: 'Vertical' }\r\n  ];\r\n\r\n  return (\r\n    <Form>\r\n      <Header textAlign=\"left\">\r\n        Question Type:\r\n        <Form.Select\r\n          error={props.questionTypeError}\r\n          selection\r\n          placeholder=\"Select a question Type\"\r\n          options={questionType}\r\n          onChange={(e) => props.setQuestionType(e.target.innerText)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Title:\r\n        <Form.Input\r\n          error={props.titleError}\r\n          placeholder=\"Title\"\r\n          onChange={(e) => props.setTitle(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Content:\r\n        <Form.Input\r\n          placeholder=\"Content\"\r\n          onChange={(e) => props.setContent(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Points:\r\n        <Form.Input\r\n          error={props.pointsError}\r\n          type=\"Number\"\r\n          onChange={(e) => props.setPoints(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        <p>*In tags you have to write a word and at the end ',' click on the space and write the next word </p>\r\n        Tags:\r\n        <Form.Input\r\n          error={props.tagsError}\r\n          type=\"Text\"\r\n          onChange={(e) => props.setTags(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Answers:\r\n        <Answer\r\n          error={props.answer1Error}\r\n          setData={props.setAnswer1}\r\n          data={props.answer1}\r\n        />\r\n        <Answer\r\n          error={props.answer2Error}\r\n          setData={props.setAnswer2}\r\n          data={props.answer2}\r\n        />\r\n        <Answer\r\n          error={props.answer3Error}\r\n          setData={props.setAnswer3}\r\n          data={props.answer3}\r\n        />\r\n        <Answer\r\n          error={props.answer4Error}\r\n          setData={props.setAnswer4}\r\n          data={props.answer4}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        viewAnswers:\r\n        <Form.Select\r\n          error={props.viewAnswersError}\r\n          selection\r\n          placeholder=\"Select a view answers\"\r\n          options={viewAnswers}\r\n          onChange={(e) => props.setViewAnswers(e.target.innerText)}\r\n        />\r\n      </Header>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default NewQuestionForm;\r\n","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\QuestionSelector\\QuestionSelector.js",["152","153","154","155","156","157","158","159"],"import React, { useState, useEffect } from 'react';\r\nimport { Container, Header, Input, Table, Button } from 'semantic-ui-react';\r\nimport getAllQuestions from '../../../services/allQuestionsService';\r\nimport QuestionSelectorRow from './QuestionSelectorRow';\r\n\r\nconst QuestionSelector = (props) => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [tags, setTags] = useState('');\r\n  const [numSelected, setNumSelected] = useState(0);\r\n\r\n  useEffect(async () => {\r\n    const allQuestions = await getAllQuestions.getAllQuestions();\r\n    allQuestions.data.map((question) => {\r\n      setQuestions((prevState) => [...prevState, question]);\r\n    });\r\n    if (tags !== '') {\r\n      const myTags = tags.split(', ');\r\n      setQuestions([]);\r\n      allQuestions.data.map((question) => {\r\n        myTags.map((tag) => {\r\n          question.tags.map((t) => {\r\n            if (tag === t) {\r\n              setQuestions((prevState) => [...prevState, question]);\r\n            }\r\n          });\r\n        });\r\n      });\r\n    }\r\n  }, [tags]);\r\n\r\n  const viewQuestion = () => {};\r\n\r\n  return (\r\n    <div>\r\n      <Container textAlign=\"left\">\r\n        <Input\r\n          type=\"text\"\r\n          onChange={(e) => setTags(e.target.value)}\r\n          icon=\"search\"\r\n          placeholder=\"Search with tags...\"\r\n        />\r\n        <Header>\r\n          Questions Selected:<Header color=\"green\">{numSelected}</Header>\r\n        </Header>\r\n      </Container>\r\n      <Container>\r\n        <Table color=\"green\" celled selectable>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Header\r\n                as=\"h2\"\r\n                content=\"Questions List\"\r\n                subheader=\"Please select the questions you would like to add...\"\r\n              />\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {questions.map((question) => {\r\n              return (\r\n                <QuestionSelectorRow\r\n                  tags={tags}\r\n                  numSelected={numSelected}\r\n                  setNumSelected={setNumSelected}\r\n                  questions={props.questions}\r\n                  setQuestions={props.setQuestions}\r\n                  questionsChanges={props.questionsChanges}\r\n                  id={question.id}\r\n                  content={question.content}\r\n                  answers={question.answers}\r\n                  name={question.title}\r\n                  tags={question.tags}\r\n                />\r\n              );\r\n            })}\r\n          </Table.Body>\r\n        </Table>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionSelector;\r\n","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\questionService.ts",[],["160","161"],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\allQuestionsService.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\QuestionManager\\QuestionRow.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\emailTamplate.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\QuestionSelector\\QuestionSelectorRow.js",["162","163","164"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Header,\r\n  List,\r\n  Popup,\r\n  Table\r\n} from 'semantic-ui-react';\r\n\r\nconst QuestionSelectorRow = (props) => {\r\n  const [isSelected, setIsSelected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.questions.map((q) => {\r\n      if (q === props.id) setIsSelected(true);\r\n    });\r\n  }, [props.tags]);\r\n\r\n  const onClickHandler = () => {\r\n    setIsSelected(!isSelected);\r\n    let tempState = [...props.questions];\r\n    if (!isSelected) {\r\n      props.setQuestions((prevState) => [...prevState, props.id]);\r\n      props.setNumSelected(props.numSelected + 1);\r\n    } else {\r\n      props.questions.map((q) => {\r\n        if (props.id === q) {\r\n          let index = props.questions.indexOf(props.id);\r\n          tempState.splice(index, 1);\r\n          props.setQuestions(tempState);\r\n        }\r\n        props.setNumSelected(props.numSelected - 1);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Table.Row>\r\n      <Table.Cell positive={isSelected} onClick={onClickHandler}>\r\n        <div>\r\n          <Header as=\"h5\" textAlign=\"left\">\r\n            {props.name}\r\n          </Header>\r\n          <List horizontal>\r\n            {props.tags.map((tag) => {\r\n              return <List.Item as=\"a\">{tag}</List.Item>;\r\n            })}\r\n          </List>\r\n        </div>\r\n      </Table.Cell>\r\n      <Table.Cell>\r\n        <Popup trigger={<Button>View</Button>}>\r\n          <Grid>\r\n            <Grid.Row>\r\n              <Container>\r\n                <Header as=\"h1\">{props.name}</Header>\r\n              </Container>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Container>\r\n                <Header as=\"h3\">{props.contant}</Header>\r\n              </Container>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Container>\r\n                {props.answers.map((a) => {\r\n                  if (a.isTrue)\r\n                    return (\r\n                      <Header color=\"green\" as=\"h4\">\r\n                        {a.content}\r\n                      </Header>\r\n                    );\r\n                  else\r\n                    return (\r\n                      <Header color=\"red\" as=\"h4\">\r\n                        {a.content}\r\n                      </Header>\r\n                    );\r\n                })}\r\n              </Container>\r\n            </Grid.Row>\r\n          </Grid>\r\n        </Popup>\r\n      </Table.Cell>\r\n    </Table.Row>\r\n  );\r\n};\r\n\r\nexport default QuestionSelectorRow;\r\n","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\Answer\\Answer.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\httpService.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\UI\\TextEditor\\TextEditor.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\environments\\environment.js",["165"],"export default {\r\n  serverUrl: \"http://localhost:4000\",\r\n};\r\n","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\UpdateQuestion\\UpdateQuestion.js",["166"],"import React from 'react';\r\n\r\nconst UpdateQuestion = () => {\r\n    \r\n}\r\n\r\nexport default UpdateQuestion","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\UpdateTest\\UpdateTest.js",["167","168"],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\getTestById.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\UpdateTest\\UpdateEmail\\UpdateEmailForm.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\UpdateTest\\UpdateTestForm.js\\UpdateTestForm.js",["169","170"],{"ruleId":"171","severity":1,"message":"172","line":10,"column":13,"nodeType":"173","endLine":18,"endColumn":4},{"ruleId":"174","severity":1,"message":"175","line":12,"column":29,"nodeType":"173","messageId":"176","endLine":12,"endColumn":31},{"ruleId":"177","severity":1,"message":"178","line":32,"column":9,"nodeType":"179","endLine":32,"endColumn":25},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":19},{"ruleId":"171","severity":1,"message":"172","line":10,"column":13,"nodeType":"173","endLine":26,"endColumn":4},{"ruleId":"174","severity":1,"message":"175","line":15,"column":31,"nodeType":"173","messageId":"176","endLine":15,"endColumn":33},{"ruleId":"174","severity":1,"message":"175","line":20,"column":33,"nodeType":"173","messageId":"176","endLine":20,"endColumn":35},{"ruleId":"184","severity":1,"message":"188","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":16},{"ruleId":"171","severity":1,"message":"172","line":10,"column":13,"nodeType":"173","endLine":28,"endColumn":4},{"ruleId":"174","severity":1,"message":"175","line":12,"column":37,"nodeType":"173","messageId":"176","endLine":12,"endColumn":39},{"ruleId":"174","severity":1,"message":"175","line":18,"column":37,"nodeType":"173","messageId":"176","endLine":18,"endColumn":39},{"ruleId":"174","severity":1,"message":"175","line":19,"column":23,"nodeType":"173","messageId":"176","endLine":19,"endColumn":25},{"ruleId":"174","severity":1,"message":"175","line":20,"column":30,"nodeType":"173","messageId":"176","endLine":20,"endColumn":32},{"ruleId":"171","severity":1,"message":"172","line":13,"column":13,"nodeType":"173","endLine":21,"endColumn":4},{"ruleId":"174","severity":1,"message":"175","line":15,"column":29,"nodeType":"173","messageId":"176","endLine":15,"endColumn":31},{"ruleId":"184","severity":1,"message":"189","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"184","severity":1,"message":"190","line":1,"column":27,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"188","line":2,"column":43,"nodeType":"186","messageId":"187","endLine":2,"endColumn":49},{"ruleId":"171","severity":1,"message":"172","line":11,"column":13,"nodeType":"173","endLine":29,"endColumn":4},{"ruleId":"174","severity":1,"message":"175","line":13,"column":38,"nodeType":"173","messageId":"176","endLine":13,"endColumn":40},{"ruleId":"174","severity":1,"message":"175","line":19,"column":40,"nodeType":"173","messageId":"176","endLine":19,"endColumn":42},{"ruleId":"174","severity":1,"message":"175","line":20,"column":26,"nodeType":"173","messageId":"176","endLine":20,"endColumn":28},{"ruleId":"174","severity":1,"message":"175","line":21,"column":33,"nodeType":"173","messageId":"176","endLine":21,"endColumn":35},{"ruleId":"184","severity":1,"message":"191","line":31,"column":9,"nodeType":"186","messageId":"187","endLine":31,"endColumn":21},{"ruleId":"177","severity":1,"message":"178","line":71,"column":19,"nodeType":"179","endLine":71,"endColumn":39},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"174","severity":1,"message":"175","line":16,"column":29,"nodeType":"173","messageId":"176","endLine":16,"endColumn":31},{"ruleId":"171","severity":1,"message":"192","line":19,"column":6,"nodeType":"193","endLine":19,"endColumn":18,"suggestions":"194"},{"ruleId":"174","severity":1,"message":"175","line":28,"column":31,"nodeType":"173","messageId":"176","endLine":28,"endColumn":33},{"ruleId":"195","severity":1,"message":"196","line":1,"column":1,"nodeType":"197","endLine":3,"endColumn":3},{"ruleId":"184","severity":1,"message":"198","line":1,"column":8,"nodeType":"186","messageId":"187","endLine":1,"endColumn":13},{"ruleId":"184","severity":1,"message":"199","line":4,"column":23,"nodeType":"186","messageId":"187","endLine":4,"endColumn":35},{"ruleId":"171","severity":1,"message":"172","line":39,"column":13,"nodeType":"173","endLine":46,"endColumn":4},{"ruleId":"171","severity":1,"message":"172","line":13,"column":13,"nodeType":"173","endLine":21,"endColumn":4},{"ruleId":"174","severity":1,"message":"175","line":15,"column":29,"nodeType":"173","messageId":"176","endLine":15,"endColumn":31},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["200"],"no-negated-in-lhs",["201"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'viewQuestion' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.id' and 'props.questions'. Either include them or remove the dependency array.","ArrayExpression",["202"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'React' is defined but never used.","'ContentState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},"Update the dependencies array to be: [props.id, props.questions, props.tags]",{"range":"205","text":"206"},[384,396],"[props.id, props.questions, props.tags]"]