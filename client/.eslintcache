[{"C:\\Yahalom\\projects\\QuizManager\\client\\src\\index.js":"1","C:\\Yahalom\\projects\\QuizManager\\client\\src\\App.js":"2","C:\\Yahalom\\projects\\QuizManager\\client\\src\\reportWebVitals.js":"3","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\NewTest.js":"4","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestion.js":"5","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\NewTestForm\\NewTestForm.js":"6","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\EmailForm.js":"7","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\newTestService.js":"8","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestionForm.js":"9","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\emailTamplate.js":"10","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\UI\\TextEditor\\TextEditor.js":"11","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\Answer\\Answer.js":"12","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\getFieldsService.js":"13"},{"size":565,"mtime":1645005696053,"results":"14","hashOfConfig":"15"},{"size":559,"mtime":1645005696049,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1645005696054,"results":"17","hashOfConfig":"15"},{"size":2683,"mtime":1645094152655,"results":"18","hashOfConfig":"15"},{"size":879,"mtime":1645083618063,"results":"19","hashOfConfig":"15"},{"size":2778,"mtime":1645093952299,"results":"20","hashOfConfig":"15"},{"size":1813,"mtime":1645032402267,"results":"21","hashOfConfig":"15"},{"size":211,"mtime":1645031532926,"results":"22","hashOfConfig":"15"},{"size":1904,"mtime":1645083618090,"results":"23","hashOfConfig":"15"},{"size":202,"mtime":1645009580461,"results":"24","hashOfConfig":"15"},{"size":707,"mtime":1645005696051,"results":"25","hashOfConfig":"15"},{"size":533,"mtime":1645083618061,"results":"26","hashOfConfig":"15"},{"size":228,"mtime":1645085691163,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"126a1o2",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Yahalom\\projects\\QuizManager\\client\\src\\index.js",[],["57","58"],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\App.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\reportWebVitals.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\NewTest.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestion.js",["59","60","61","62","63","64"],"import React, { useState } from 'react';\r\nimport NewQuestionForm from './NewQuestionForm';\r\nimport { Container } from 'semantic-ui-react';\r\nimport { EditorState } from 'draft-js';\r\n\r\nconst NewQuestion = () => {\r\n  const [questionType, setQuestionType] = useState('')\r\n  const [language, setLenguage] = useState('');\r\n  const [points, setPoints] = useState(0);\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [answers, setAnswers] = useState([]);\r\n\r\n  return (\r\n    <Container>\r\n      <h1>New Question</h1>\r\n      <NewQuestionForm\r\n        setQuestionType={setQuestionType}\r\n        setLenguage={setLenguage}\r\n        setPoints={setPoints}\r\n        setTitle={setTitle}\r\n        setContent={setContent}\r\n        setAnswers={setAnswers}\r\n        answers={answers}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NewQuestion","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\NewTestForm\\NewTestForm.js",["65","66"],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\EmailForm.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\newTestService.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestionForm.js",["67","68"],"import React ,{ useState, useEffect } from \"react\";\r\nimport \"./NewQuestionForm.css\"\r\nimport { Header, Form } from \"semantic-ui-react\";\r\nimport Answer from \"../Answer/Answer\";\r\n\r\nconst NewQuestionForm = (props) => {\r\n  const questionType = [\r\n    { key: 'SingleChoiceQuestion', value: 'SingleChoiceQuestion', text: 'SingleChoiceQuestion' },\r\n    { key: 'MultipleSelectionQuestion', value: 'MultipleSelectionQuestion', text: 'MultipleSelectionQuestion' }\r\n  ];\r\n\r\n  const [answerCounter, setAnswerCounter] = useState([1, 2, 3, 4]);\r\n  \r\n  useEffect(() => {\r\n    props.setAnswers('AAA')\r\n  }, []) \r\n  return (\r\n    <Form>\r\n      <Header textAlign=\"left\">\r\n        Question Type:\r\n        <Form.Select\r\n          selection\r\n          placeholder=\"Select a question Type\"\r\n          options={questionType}\r\n          onChange={(e) => props.setQuestionType(e.target.innerText)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Title:\r\n        <Form.Input\r\n          fluid\r\n          placeholder=\"Title\"\r\n          onChange={(e) => props.setTitle(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Content:\r\n        <Form.Input      \r\n          placeholder=\"Content\"\r\n          onChange={(e) => props.setContent(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Points:\r\n        <Form.Input         \r\n          type=\"Number\"\r\n          onChange={(e) => props.setPoints(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Answers:\r\n        {answerCounter.map((index) => {\r\n          return (<Answer\r\n          id = {index}\r\n          setData = {props.setAnswers()}\r\n          data = {props.answers}\r\n          />)\r\n        })}\r\n        <button onClick={() => console.log(props.answers)}>Test</button>\r\n      </Header>\r\n    </Form>\r\n    );\r\n  };\r\n\r\nexport default NewQuestionForm;","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\emailTamplate.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\UI\\TextEditor\\TextEditor.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\Answer\\Answer.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\getFieldsService.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":4,"column":10,"nodeType":"75","messageId":"76","endLine":4,"endColumn":21},{"ruleId":"73","severity":1,"message":"77","line":7,"column":10,"nodeType":"75","messageId":"76","endLine":7,"endColumn":22},{"ruleId":"73","severity":1,"message":"78","line":8,"column":10,"nodeType":"75","messageId":"76","endLine":8,"endColumn":18},{"ruleId":"73","severity":1,"message":"79","line":9,"column":10,"nodeType":"75","messageId":"76","endLine":9,"endColumn":16},{"ruleId":"73","severity":1,"message":"80","line":10,"column":10,"nodeType":"75","messageId":"76","endLine":10,"endColumn":15},{"ruleId":"73","severity":1,"message":"81","line":11,"column":10,"nodeType":"75","messageId":"76","endLine":11,"endColumn":17},{"ruleId":"82","severity":1,"message":"83","line":13,"column":13,"nodeType":"84","endLine":21,"endColumn":4},{"ruleId":"85","severity":1,"message":"86","line":15,"column":29,"nodeType":"84","messageId":"87","endLine":15,"endColumn":31},{"ruleId":"73","severity":1,"message":"88","line":12,"column":25,"nodeType":"75","messageId":"76","endLine":12,"endColumn":41},{"ruleId":"82","severity":1,"message":"89","line":16,"column":6,"nodeType":"90","endLine":16,"endColumn":8,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'EditorState' is defined but never used.","Identifier","unusedVar","'questionType' is assigned a value but never used.","'language' is assigned a value but never used.","'points' is assigned a value but never used.","'title' is assigned a value but never used.","'content' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'setAnswerCounter' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [props]",{"range":"97","text":"98"},[590,592],"[props]"]