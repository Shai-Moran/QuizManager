[{"C:\\Yahalom\\projects\\QuizManager\\client\\src\\index.js":"1","C:\\Yahalom\\projects\\QuizManager\\client\\src\\App.js":"2","C:\\Yahalom\\projects\\QuizManager\\client\\src\\reportWebVitals.js":"3","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\NewTest.js":"4","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestion.js":"5","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\NewTestForm\\NewTestForm.js":"6","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\EmailForm.js":"7","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\newTestService.js":"8","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestionForm.js":"9","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\emailTamplate.js":"10","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\UI\\TextEditor\\TextEditor.js":"11","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\Answer\\Answer.js":"12","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\getFieldsService.js":"13","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\TestManager\\TestManager.js":"14","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\TestManager\\TestRow\\TestRow.js":"15","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\allTestsService.js":"16","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\questionService.ts":"17","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\httpService.js":"18","C:\\Yahalom\\projects\\QuizManager\\client\\src\\environments\\environment.js":"19"},{"size":565,"mtime":1645005696053,"results":"20","hashOfConfig":"21"},{"size":757,"mtime":1645104633641,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1645005696054,"results":"23","hashOfConfig":"21"},{"size":3928,"mtime":1645181910746,"results":"24","hashOfConfig":"21"},{"size":3451,"mtime":1645182532928,"results":"25","hashOfConfig":"21"},{"size":2967,"mtime":1645095368886,"results":"26","hashOfConfig":"21"},{"size":1853,"mtime":1645095393590,"results":"27","hashOfConfig":"21"},{"size":211,"mtime":1645031532926,"results":"28","hashOfConfig":"21"},{"size":1931,"mtime":1645182532930,"results":"29","hashOfConfig":"21"},{"size":202,"mtime":1645009580461,"results":"30","hashOfConfig":"21"},{"size":707,"mtime":1645005696051,"results":"31","hashOfConfig":"21"},{"size":652,"mtime":1645182532927,"results":"32","hashOfConfig":"21"},{"size":228,"mtime":1645085691163,"results":"33","hashOfConfig":"21"},{"size":1251,"mtime":1645179855643,"results":"34","hashOfConfig":"21"},{"size":516,"mtime":1645107065266,"results":"35","hashOfConfig":"21"},{"size":218,"mtime":1645178923513,"results":"36","hashOfConfig":"21"},{"size":552,"mtime":1645182532931,"results":"37","hashOfConfig":"21"},{"size":614,"mtime":1645005696054,"results":"38","hashOfConfig":"21"},{"size":61,"mtime":1645005696053,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"126a1o2",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Yahalom\\projects\\QuizManager\\client\\src\\index.js",[],["81","82"],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\App.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\reportWebVitals.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\NewTest.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestion.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\NewTestForm\\NewTestForm.js",["83","84"],"import { useState, useEffect } from 'react';\r\nimport { Header, Form } from 'semantic-ui-react';\r\nimport TextEditor from '../../UI/TextEditor/TextEditor';\r\nimport getFieldsService from '../../../services/getFieldsService';\r\n\r\nconst NewTestForm = (props) => {\r\n  const [fields, setFields] = useState([]);\r\n  const languageOptions = [\r\n    { key: 'hebrew', value: 'hebrew', text: 'Hebrew' },\r\n    { key: 'english', value: 'english', text: 'English' }\r\n  ];\r\n\r\n  useEffect(async () => {\r\n    var fieldsData = await getFieldsService.getFields();\r\n    fieldsData.data.map((f) => {\r\n      setFields((prevState) => [\r\n        ...prevState,\r\n        { key: f.fieldName, value: f.fieldName, text: f.fieldName }\r\n      ]);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Form>\r\n      <Header textAlign=\"left\">\r\n        Field:\r\n        <Form.Select\r\n          error={props.fieldError}\r\n          selection\r\n          placeholder=\"Select a Field\"\r\n          options={fields}\r\n          onChange={(e) => props.setField(e.target.innerText)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Language:\r\n        <Form.Select\r\n          error={props.languageError}\r\n          selection\r\n          placeholder=\"Select a Language\"\r\n          options={languageOptions}\r\n          onChange={(e) => props.setLenguage(e.target.innerText)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Test Name:\r\n        <Form.Input\r\n          error={props.nameError}\r\n          fluid\r\n          placeholder=\"Test Name\"\r\n          onChange={(e) => props.setName(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Creater Email:\r\n        <Form.Input\r\n          error={props.emailError}\r\n          fluid\r\n          placeholder=\"Email\"\r\n          onChange={(e) => props.setEmail(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Passing Grade:\r\n        <Form.Input\r\n          error={props.passingGradeError}\r\n          fluid\r\n          type=\"Number\"\r\n          onChange={(e) => props.setPassingGrade(e.target.value)}\r\n        />\r\n      </Header>\r\n      <div className=\"wysiwyg-input\">\r\n        <Header textAlign=\"left\" as=\"h2\">\r\n          Header\r\n        </Header>\r\n        <TextEditor\r\n          editorState={props.header}\r\n          setEditorState={props.setHeader}\r\n        />\r\n      </div>\r\n      <div className=\"wysiwyg-input\">\r\n        <Header textAlign=\"left\" as=\"h2\">\r\n          Message to show on success:\r\n        </Header>\r\n        <TextEditor\r\n          editorState={props.successMsg}\r\n          setEditorState={props.setSuccessMsg}\r\n        />\r\n      </div>\r\n      <div className=\"wysiwyg-input\">\r\n        <Header textAlign=\"left\" as=\"h2\">\r\n          Message to show on failure:\r\n        </Header>\r\n        <TextEditor\r\n          editorState={props.failMsg}\r\n          setEditorState={props.setFailMsg}\r\n        />\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default NewTestForm;\r\n","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\EmailForm.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\newTestService.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestionForm.js",["85","86"],"import React ,{ useState, useEffect } from \"react\";\r\nimport \"./NewQuestionForm.css\"\r\nimport { Header, Form } from \"semantic-ui-react\";\r\nimport Answer from \"../Answer/Answer\";\r\n\r\nconst NewQuestionForm = (props) => {\r\n  const questionType = [\r\n    { key: 'SingleChoiceQuestion', value: 'SingleChoiceQuestion', text: 'SingleChoiceQuestion' },\r\n    { key: 'MultipleSelectionQuestion', value: 'MultipleSelectionQuestion', text: 'MultipleSelectionQuestion' }\r\n  ];\r\n\r\n  const [answerCounter, setAnswerCounter] = useState([1, 2, 3, 4]);\r\n  \r\n  useEffect(() => {\r\n    props.setAnswers('AAA')\r\n  }, []) \r\n  return (\r\n    <Form>\r\n      <Header textAlign=\"left\">\r\n        Question Type:\r\n        <Form.Select\r\n          selection\r\n          placeholder=\"Select a question Type\"\r\n          options={questionType}\r\n          onChange={(e) => props.setQuestionType(e.target.innerText)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Title:\r\n        <Form.Input\r\n          fluid\r\n          placeholder=\"Title\"\r\n          onChange={(e) => props.setTitle(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Content:\r\n        <Form.Input      \r\n          placeholder=\"Content\"\r\n          onChange={(e) => props.setContent(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Points:\r\n        <Form.Input         \r\n          type=\"Number\"\r\n          onChange={(e) => props.setPoints(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Answers:\r\n        {answerCounter.map((index) => {\r\n          return (<Answer\r\n          id = {index}\r\n          setData = {props.setAnswers()}\r\n          data = {props.answers}\r\n          />)\r\n        })}\r\n        <button onClick={() => console.log(props.answers)}>Test</button>\r\n      </Header>\r\n    </Form>\r\n    );\r\n  };\r\n\r\nexport default NewQuestionForm;","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\emailTamplate.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\UI\\TextEditor\\TextEditor.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\Answer\\Answer.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\getFieldsService.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\TestManager\\TestManager.js",["87","88","89"],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\TestManager\\TestRow\\TestRow.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\allTestsService.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\questionService.ts",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\httpService.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\environments\\environment.js",["90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":13,"column":13,"nodeType":"97","endLine":21,"endColumn":4},{"ruleId":"98","severity":1,"message":"99","line":15,"column":29,"nodeType":"97","messageId":"100","endLine":15,"endColumn":31},{"ruleId":"101","severity":1,"message":"102","line":12,"column":25,"nodeType":"103","messageId":"104","endLine":12,"endColumn":41},{"ruleId":"95","severity":1,"message":"105","line":16,"column":6,"nodeType":"106","endLine":16,"endColumn":8,"suggestions":"107"},{"ruleId":"101","severity":1,"message":"108","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":19},{"ruleId":"95","severity":1,"message":"96","line":9,"column":13,"nodeType":"97","endLine":14,"endColumn":4},{"ruleId":"98","severity":1,"message":"99","line":11,"column":31,"nodeType":"97","messageId":"100","endLine":11,"endColumn":33},{"ruleId":"109","severity":1,"message":"110","line":1,"column":1,"nodeType":"111","endLine":3,"endColumn":3},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-unused-vars","'setAnswerCounter' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["114"],"'Container' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [props]",{"range":"117","text":"118"},[590,592],"[props]"]