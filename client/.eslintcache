<<<<<<< HEAD
[{"C:\\Yahalom\\projects\\QuizManager\\client\\src\\index.js":"1","C:\\Yahalom\\projects\\QuizManager\\client\\src\\reportWebVitals.js":"2","C:\\Yahalom\\projects\\QuizManager\\client\\src\\App.js":"3","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\NewTest.js":"4","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestion.js":"5","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\QuestionManager\\QuestionManager.js":"6","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\TestManager\\TestManager.js":"7","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\EmailForm.js":"8","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\newTestService.js":"9","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\NewTestForm\\NewTestForm.js":"10","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestionForm.js":"11","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\TestManager\\TestRow\\TestRow.js":"12","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\allTestsService.js":"13","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\QuestionManager\\QuestionRow.js":"14","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\questionService.ts":"15","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\emailTamplate.js":"16","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\getFieldsService.js":"17","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\Answer\\Answer.js":"18","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\UI\\TextEditor\\TextEditor.js":"19","C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\httpService.js":"20","C:\\Yahalom\\projects\\QuizManager\\client\\src\\environments\\environment.js":"21","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\TestManager\\TestFieldMenu.js":"22"},{"size":565,"mtime":1645005696053,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1645005696054,"results":"25","hashOfConfig":"24"},{"size":1116,"mtime":1645372127498,"results":"26","hashOfConfig":"24"},{"size":3928,"mtime":1645181910746,"results":"27","hashOfConfig":"24"},{"size":3285,"mtime":1645370825201,"results":"28","hashOfConfig":"24"},{"size":1311,"mtime":1645370825217,"results":"29","hashOfConfig":"24"},{"size":1337,"mtime":1645372955395,"results":"30","hashOfConfig":"24"},{"size":1853,"mtime":1645095393590,"results":"31","hashOfConfig":"24"},{"size":211,"mtime":1645031532926,"results":"32","hashOfConfig":"24"},{"size":2967,"mtime":1645095368886,"results":"33","hashOfConfig":"24"},{"size":2875,"mtime":1645370825203,"results":"34","hashOfConfig":"24"},{"size":516,"mtime":1645107065266,"results":"35","hashOfConfig":"24"},{"size":261,"mtime":1645372852346,"results":"36","hashOfConfig":"24"},{"size":523,"mtime":1645283024194,"results":"37","hashOfConfig":"24"},{"size":587,"mtime":1645283024196,"results":"38","hashOfConfig":"24"},{"size":202,"mtime":1645009580461,"results":"39","hashOfConfig":"24"},{"size":228,"mtime":1645085691163,"results":"40","hashOfConfig":"24"},{"size":652,"mtime":1645182532927,"results":"41","hashOfConfig":"24"},{"size":707,"mtime":1645005696051,"results":"42","hashOfConfig":"24"},{"size":614,"mtime":1645005696054,"results":"43","hashOfConfig":"24"},{"size":61,"mtime":1645005696053,"results":"44","hashOfConfig":"24"},{"size":1142,"mtime":1645373453182,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"126a1o2",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},"C:\\Yahalom\\projects\\QuizManager\\client\\src\\index.js",[],["100","101"],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\reportWebVitals.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\App.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\NewTest.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestion.js",["102","103","104","105","106","107","108","109","110","111","112","113"],"import React, { useState } from 'react';\r\nimport NewQuestionForm from './NewQuestionForm';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Button } from 'semantic-ui-react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport QuestionService from '../../services/questionService';\r\n\r\nconst NewQuestion = () => {\r\n  const navigation = useNavigate();\r\n  const [questionType, setQuestionType] = useState('')\r\n  const [viewAnswers, setViewAnswers] = useState('')\r\n  const [language, setLanguage] = useState('');\r\n  const [points, setPoints] = useState(0);\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const [answer1, setAnswer1] = useState({content: '', isTrue: false});\r\n  const [answer2, setAnswer2] = useState({content: '', isTrue: false});\r\n  const [answer3, setAnswer3] = useState({content: '', isTrue: false});\r\n  const [answer4, setAnswer4] = useState({content: '', isTrue: false});\r\n\r\n  const [questionTypeError, setQuestionTypeError] = useState(false);\r\n  const [languageError, setLanguageError] = useState(false);\r\n  const [pointsError, setPointsError] = useState(false);\r\n  const [titleError, setTitleError] = useState(false);\r\n  const [tagsError, setTagsError] = useState(false);\r\n  const [contentError, setContentError] = useState(false);\r\n  const [answer1Error, setAnswer1Error] = useState(false);\r\n  const [answer2Error, setAnswer2Error] = useState(false);\r\n  const [answer3Error, setAnswer3Error] = useState(false);\r\n  const [answer4Error, setAnswer4Error] = useState(false);\r\n\r\n  const newQuestionHandler = () => {\r\n    const id = uuidv4();\r\n    var answers = [answer1, answer2, answer3, answer4]\r\n    console.log(questionType)\r\n    const newQuestion = {\r\n      id: id,\r\n      title: title,\r\n      content: content,\r\n      answers: answers,\r\n      questionType: questionType,\r\n      viewAnswers: viewAnswers,\r\n      tags: [],\r\n      points: points,\r\n    }\r\n    QuestionService.addQuestion(newQuestion);\r\n    navigation('/question-added');\r\n  } \r\n\r\n  return (\r\n    <Container>\r\n      <h1>New Question</h1>\r\n      <NewQuestionForm\r\n        setQuestionType={setQuestionType}\r\n        setLenguage={setLanguage}\r\n        setPoints={setPoints}\r\n        setTitle={setTitle}\r\n        setTags={setTags}\r\n        setContent={setContent}\r\n        setAnswer1={setAnswer1}\r\n        setAnswer2={setAnswer2}\r\n        setAnswer3={setAnswer3}\r\n        setAnswer4={setAnswer4}\r\n        setViewAnswers={setViewAnswers}\r\n        answer1={answer1}\r\n        answer2={answer2}\r\n        answer3={answer3}\r\n        answer4={answer4}\r\n        viewAnswers={viewAnswers}        \r\n        questionTypeError={questionTypeError}\r\n        languageError={languageError}\r\n        pointsError={pointsError}\r\n        titleError={titleError}\r\n        tagsError={tagsError}\r\n        contentError={contentError}\r\n        answer1Error={answer1Error}\r\n        answer2Error={answer2Error}\r\n        answer3Error={answer3Error}\r\n        answer4Error={answer4Error}\r\n      />\r\n      <Container textAlign=\"right\">\r\n        <Button className=\"ui green button\" onClick={newQuestionHandler}>\r\n          Add New Question\r\n        </Button>\r\n      </Container>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NewQuestion","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\QuestionManager\\QuestionManager.js",["114","115","116"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Table } from 'semantic-ui-react';\r\nimport questionsService from '../../services/questionService';\r\nimport QuestionRow from './QuestionRow';\r\n\r\nconst QuestionManager = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    var questionsData = await questionsService.getAllQuestions();\r\n    questionsData.data.map((question) => {\r\n      setQuestions((prevState) => [...prevState, question]);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Table celled selectable>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell>Title</Table.HeaderCell>\r\n          <Table.HeaderCell>Number Of Answers</Table.HeaderCell>\r\n          <Table.HeaderCell>Last Updated</Table.HeaderCell>\r\n          <Table.HeaderCell></Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n      <Table.Body>\r\n        {questions.map((question) => {\r\n          return (\r\n            <QuestionRow\r\n              id={question.id}\r\n              title={question.title}\r\n              content={question.content}\r\n              numOfAnswers={question.answers.length}\r\n            />\r\n          );\r\n        })}\r\n        {console.log(questions)}\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default QuestionManager","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\TestManager\\TestManager.js",["117","118","119"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Table } from 'semantic-ui-react';\r\nimport TestRow from './TestRow/TestRow';\r\nimport allTestsService from '../../services/allTestsService';\r\n\r\nconst TestManager = () => {\r\n  const [tests, setTests] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const field = urlParams.get('field');\r\n    var testsData = await allTestsService.getAllTests(field);\r\n    testsData.data.map((test) => {\r\n      setTests((prevState) => [...prevState, test]);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Table celled selectable>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell>Name</Table.HeaderCell>\r\n          <Table.HeaderCell>Number Of Questions</Table.HeaderCell>\r\n          <Table.HeaderCell>Last Updated</Table.HeaderCell>\r\n          <Table.HeaderCell></Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n      <Table.Body>\r\n        {tests.map((test) => {\r\n          return (\r\n            <TestRow\r\n              id={test.id}\r\n              name={test.name}\r\n              numOfQuestions={test.questions.length}\r\n              lastUpdated={test.lastUpdated}\r\n            />\r\n          );\r\n        })}\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default TestManager;\r\n","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\EmailForm.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\newTestService.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\NewTestForm\\NewTestForm.js",["120","121"],"import { useState, useEffect } from 'react';\r\nimport { Header, Form } from 'semantic-ui-react';\r\nimport TextEditor from '../../UI/TextEditor/TextEditor';\r\nimport getFieldsService from '../../../services/getFieldsService';\r\n\r\nconst NewTestForm = (props) => {\r\n  const [fields, setFields] = useState([]);\r\n  const languageOptions = [\r\n    { key: 'hebrew', value: 'hebrew', text: 'Hebrew' },\r\n    { key: 'english', value: 'english', text: 'English' }\r\n  ];\r\n\r\n  useEffect(async () => {\r\n    var fieldsData = await getFieldsService.getFields();\r\n    fieldsData.data.map((f) => {\r\n      setFields((prevState) => [\r\n        ...prevState,\r\n        { key: f.fieldName, value: f.fieldName, text: f.fieldName }\r\n      ]);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Form>\r\n      <Header textAlign=\"left\">\r\n        Field:\r\n        <Form.Select\r\n          error={props.fieldError}\r\n          selection\r\n          placeholder=\"Select a Field\"\r\n          options={fields}\r\n          onChange={(e) => props.setField(e.target.innerText)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Language:\r\n        <Form.Select\r\n          error={props.languageError}\r\n          selection\r\n          placeholder=\"Select a Language\"\r\n          options={languageOptions}\r\n          onChange={(e) => props.setLenguage(e.target.innerText)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Test Name:\r\n        <Form.Input\r\n          error={props.nameError}\r\n          fluid\r\n          placeholder=\"Test Name\"\r\n          onChange={(e) => props.setName(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Creater Email:\r\n        <Form.Input\r\n          error={props.emailError}\r\n          fluid\r\n          placeholder=\"Email\"\r\n          onChange={(e) => props.setEmail(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Passing Grade:\r\n        <Form.Input\r\n          error={props.passingGradeError}\r\n          fluid\r\n          type=\"Number\"\r\n          onChange={(e) => props.setPassingGrade(e.target.value)}\r\n        />\r\n      </Header>\r\n      <div className=\"wysiwyg-input\">\r\n        <Header textAlign=\"left\" as=\"h2\">\r\n          Header\r\n        </Header>\r\n        <TextEditor\r\n          editorState={props.header}\r\n          setEditorState={props.setHeader}\r\n        />\r\n      </div>\r\n      <div className=\"wysiwyg-input\">\r\n        <Header textAlign=\"left\" as=\"h2\">\r\n          Message to show on success:\r\n        </Header>\r\n        <TextEditor\r\n          editorState={props.successMsg}\r\n          setEditorState={props.setSuccessMsg}\r\n        />\r\n      </div>\r\n      <div className=\"wysiwyg-input\">\r\n        <Header textAlign=\"left\" as=\"h2\">\r\n          Message to show on failure:\r\n        </Header>\r\n        <TextEditor\r\n          editorState={props.failMsg}\r\n          setEditorState={props.setFailMsg}\r\n        />\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default NewTestForm;\r\n","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestionForm.js",["122","123"],"import React ,{ useState, useEffect } from \"react\";\r\nimport \"./NewQuestionForm.css\"\r\nimport { Header, Form } from \"semantic-ui-react\";\r\nimport Answer from \"../Answer/Answer\";\r\n\r\nconst NewQuestionForm = (props) => {\r\n  const questionType = [\r\n    { key: 'SingleChoiceQuestion', value: 'SingleChoiceQuestion', text: 'SingleChoiceQuestion' },\r\n    { key: 'MultipleSelectionQuestion', value: 'MultipleSelectionQuestion', text: 'MultipleSelectionQuestion' }\r\n  ];\r\n  const viewAnswers = [\r\n    { key: 'Horizontal', value: 'Horizontal', text: 'Horizontal' },\r\n    { key: 'Vertical', value: 'Vertical', text: 'Vertical' }\r\n  ];\r\n  \r\n  return (\r\n    <Form>\r\n      <Header textAlign=\"left\">\r\n        Question Type:\r\n        <Form.Select\r\n          error={props.questionType}\r\n          selection\r\n          placeholder=\"Select a question Type\"\r\n          options={questionType}\r\n          onChange={(e) => props.setQuestionType(e.target.innerText)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Title:\r\n        <Form.Input\r\n          error={props.titleError}\r\n          placeholder=\"Title\"\r\n          onChange={(e) => props.setTitle(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Content:\r\n        <Form.Input\r\n          error={props.contentError}      \r\n          placeholder=\"Content\"\r\n          onChange={(e) => props.setContent(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Points:\r\n        <Form.Input \r\n          error={props.pointsError}        \r\n          type=\"Number\"\r\n          onChange={(e) => props.setPoints(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Tags:\r\n        <Form.Input \r\n          error={props.tagsError}        \r\n          type=\"Text\"\r\n          onChange={(e) => props.setTags(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Answers:\r\n        <Answer\r\n          error={props.answer1Error}\r\n          setData = {props.setAnswer1}\r\n          data = {props.answer1}\r\n          />\r\n          <Answer\r\n          error={props.answer2Error}\r\n          setData = {props.setAnswer2}\r\n          data = {props.answer2}\r\n          />\r\n          <Answer\r\n          error={props.answer3Error}\r\n          setData = {props.setAnswer3}\r\n          data = {props.answer3}\r\n          />\r\n          <Answer\r\n          error={props.answer4Error}\r\n          setData = {props.setAnswer4}\r\n          data = {props.answer4}\r\n          />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        viewAnswers:\r\n        <Form.Select\r\n          selection\r\n          placeholder=\"Select a view answers\"\r\n          options={viewAnswers}\r\n          onChange={(e) => props.setViewAnswers(e.target.innerText)}\r\n        />\r\n      </Header>\r\n    </Form>\r\n    );\r\n  };\r\n\r\nexport default NewQuestionForm;","C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\TestManager\\TestRow\\TestRow.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\allTestsService.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\QuestionManager\\QuestionRow.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\questionService.ts",[],["124","125"],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\emailTamplate.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\getFieldsService.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\Answer\\Answer.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\UI\\TextEditor\\TextEditor.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\services\\httpService.js",[],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\environments\\environment.js",["126"],"export default {\r\n  serverUrl: \"http://localhost:4000\",\r\n};\r\n",["127","128"],"C:\\Yahalom\\projects\\QuizManager\\client\\src\\components\\TestManager\\TestFieldMenu.js",["129","130","131"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Header, Select } from 'semantic-ui-react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport getFieldsService from '../../services/getFieldsService';\r\n\r\nconst TestFieldMenu = () => {\r\n  const navigation = useNavigate();\r\n  const [fields, setFields] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    var fieldsData = await getFieldsService.getFields();\r\n    fieldsData.data.map((f) => {\r\n      setFields((prevState) => [\r\n        ...prevState,\r\n        { key: f.fieldName, value: f.fieldName, text: f.fieldName }\r\n      ]);\r\n    });\r\n  }, []);\r\n\r\n  const onSelectFieldHandler = (e) => {\r\n    navigation(`/tests?field=${e.target.innerText}`);\r\n  };\r\n\r\n  return (\r\n    <Container textAlign=\"left\">\r\n      <Header as=\"h1\">Welcome to QuizManager!</Header>\r\n      <Header as=\"h3\">Please select the field of tests:</Header>\r\n      <Select\r\n        options={fields}\r\n        selection\r\n        placeholder=\"Select a Field\"\r\n        options={fields}\r\n        onChange={onSelectFieldHandler}\r\n      ></Select>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TestFieldMenu;\r\n",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":12,"column":10,"nodeType":"138","messageId":"139","endLine":12,"endColumn":18},{"ruleId":"136","severity":1,"message":"140","line":16,"column":10,"nodeType":"138","messageId":"139","endLine":16,"endColumn":14},{"ruleId":"136","severity":1,"message":"141","line":22,"column":29,"nodeType":"138","messageId":"139","endLine":22,"endColumn":49},{"ruleId":"136","severity":1,"message":"142","line":23,"column":25,"nodeType":"138","messageId":"139","endLine":23,"endColumn":41},{"ruleId":"136","severity":1,"message":"143","line":24,"column":23,"nodeType":"138","messageId":"139","endLine":24,"endColumn":37},{"ruleId":"136","severity":1,"message":"144","line":25,"column":22,"nodeType":"138","messageId":"139","endLine":25,"endColumn":35},{"ruleId":"136","severity":1,"message":"145","line":26,"column":21,"nodeType":"138","messageId":"139","endLine":26,"endColumn":33},{"ruleId":"136","severity":1,"message":"146","line":27,"column":24,"nodeType":"138","messageId":"139","endLine":27,"endColumn":39},{"ruleId":"136","severity":1,"message":"147","line":28,"column":24,"nodeType":"138","messageId":"139","endLine":28,"endColumn":39},{"ruleId":"136","severity":1,"message":"148","line":29,"column":24,"nodeType":"138","messageId":"139","endLine":29,"endColumn":39},{"ruleId":"136","severity":1,"message":"149","line":30,"column":24,"nodeType":"138","messageId":"139","endLine":30,"endColumn":39},{"ruleId":"136","severity":1,"message":"150","line":31,"column":24,"nodeType":"138","messageId":"139","endLine":31,"endColumn":39},{"ruleId":"136","severity":1,"message":"151","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":9,"column":13,"nodeType":"154","endLine":14,"endColumn":4},{"ruleId":"155","severity":1,"message":"156","line":11,"column":39,"nodeType":"154","messageId":"157","endLine":11,"endColumn":41},{"ruleId":"136","severity":1,"message":"151","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":19},{"ruleId":"152","severity":1,"message":"153","line":9,"column":13,"nodeType":"154","endLine":16,"endColumn":4},{"ruleId":"155","severity":1,"message":"156","line":13,"column":31,"nodeType":"154","messageId":"157","endLine":13,"endColumn":33},{"ruleId":"152","severity":1,"message":"153","line":13,"column":13,"nodeType":"154","endLine":21,"endColumn":4},{"ruleId":"155","severity":1,"message":"156","line":15,"column":29,"nodeType":"154","messageId":"157","endLine":15,"endColumn":31},{"ruleId":"136","severity":1,"message":"158","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"159","line":1,"column":27,"nodeType":"138","messageId":"139","endLine":1,"endColumn":36},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"160","severity":1,"message":"161","line":1,"column":1,"nodeType":"162","endLine":3,"endColumn":3},{"ruleId":"132","replacedBy":"163"},{"ruleId":"134","replacedBy":"164"},{"ruleId":"152","severity":1,"message":"153","line":10,"column":13,"nodeType":"154","endLine":18,"endColumn":4},{"ruleId":"155","severity":1,"message":"156","line":12,"column":29,"nodeType":"154","messageId":"157","endLine":12,"endColumn":31},{"ruleId":"165","severity":1,"message":"166","line":32,"column":9,"nodeType":"167","endLine":32,"endColumn":25},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'language' is assigned a value but never used.","Identifier","unusedVar","'tags' is assigned a value but never used.","'setQuestionTypeError' is assigned a value but never used.","'setLanguageError' is assigned a value but never used.","'setPointsError' is assigned a value but never used.","'setTitleError' is assigned a value but never used.","'setTagsError' is assigned a value but never used.","'setContentError' is assigned a value but never used.","'setAnswer1Error' is assigned a value but never used.","'setAnswer2Error' is assigned a value but never used.","'setAnswer3Error' is assigned a value but never used.","'setAnswer4Error' is assigned a value but never used.","'Container' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'useState' is defined but never used.","'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["168"],["169"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]
=======
[{"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\index.js":"1","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\App.js":"2","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\NewTest\\NewTest.js":"4","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\TestManager\\TestManager.js":"5","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\QuestionManager\\QuestionManager.js":"6","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestion.js":"7","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\QuestionManager\\QuestionRow.js":"8","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\EmailForm.js":"9","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\NewTest\\NewTestForm\\NewTestForm.js":"10","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\services\\newTestService.js":"11","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\services\\allTestsService.js":"12","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\TestManager\\TestRow\\TestRow.js":"13","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\services\\questionService.ts":"14","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestionForm.js":"15","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\emailTamplate.js":"16","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\services\\getFieldsService.js":"17","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\services\\httpService.js":"18","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\UI\\TextEditor\\TextEditor.js":"19","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\Answer\\Answer.js":"20","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\environments\\environment.js":"21"},{"size":565,"mtime":1644760330581,"results":"22","hashOfConfig":"23"},{"size":978,"mtime":1645197032065,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1644760330586,"results":"25","hashOfConfig":"23"},{"size":3928,"mtime":1645183985093,"results":"26","hashOfConfig":"23"},{"size":1251,"mtime":1645183985095,"results":"27","hashOfConfig":"23"},{"size":1136,"mtime":1645561568079,"results":"28","hashOfConfig":"23"},{"size":3998,"mtime":1645561654156,"results":"29","hashOfConfig":"23"},{"size":537,"mtime":1645558491003,"results":"30","hashOfConfig":"23"},{"size":1853,"mtime":1645102761549,"results":"31","hashOfConfig":"23"},{"size":2967,"mtime":1645185789441,"results":"32","hashOfConfig":"23"},{"size":211,"mtime":1645033167621,"results":"33","hashOfConfig":"23"},{"size":218,"mtime":1645183985098,"results":"34","hashOfConfig":"23"},{"size":516,"mtime":1645183985097,"results":"35","hashOfConfig":"23"},{"size":587,"mtime":1645187541357,"results":"36","hashOfConfig":"23"},{"size":2922,"mtime":1645552858357,"results":"37","hashOfConfig":"23"},{"size":202,"mtime":1645025464364,"results":"38","hashOfConfig":"23"},{"size":228,"mtime":1645102761556,"results":"39","hashOfConfig":"23"},{"size":614,"mtime":1644760330587,"results":"40","hashOfConfig":"23"},{"size":707,"mtime":1644948609462,"results":"41","hashOfConfig":"23"},{"size":656,"mtime":1645463862128,"results":"42","hashOfConfig":"23"},{"size":61,"mtime":1644760330579,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1a084mw",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\index.js",[],["92","93"],"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\App.js",[],"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\NewTest\\NewTest.js",[],"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\TestManager\\TestManager.js",["94","95","96"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Table } from 'semantic-ui-react';\r\nimport TestRow from './TestRow/TestRow';\r\nimport allTestsService from '../../services/allTestsService';\r\n\r\nconst TestManager = () => {\r\n  const [tests, setTests] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    var testsData = await allTestsService.getAllTests();\r\n    testsData.data.map((test) => {\r\n      setTests((prevState) => [...prevState, test]);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Table celled selectable>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell>Name</Table.HeaderCell>\r\n          <Table.HeaderCell>Number Of Questions</Table.HeaderCell>\r\n          <Table.HeaderCell>Last Updated</Table.HeaderCell>\r\n          <Table.HeaderCell></Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n      <Table.Body>\r\n        {tests.map((test) => {\r\n          return (\r\n            <TestRow\r\n              id={test.id}\r\n              name={test.name}\r\n              numOfQuestions={test.questions.length}\r\n              lastUpdated={test.lastUpdated}\r\n            />\r\n          );\r\n        })}\r\n        {console.log(tests)}\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default TestManager;\r\n","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\QuestionManager\\QuestionManager.js",["97"],"import React, { useState } from 'react';\r\nimport { Table } from 'semantic-ui-react';\r\nimport QuestionRow from './QuestionRow';\r\n\r\nconst QuestionManager = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  return (\r\n    <Table celled selectable>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell>Question Type</Table.HeaderCell>\r\n          <Table.HeaderCell>Title</Table.HeaderCell>\r\n          <Table.HeaderCell>Content</Table.HeaderCell>\r\n          <Table.HeaderCell>Answers</Table.HeaderCell>\r\n          <Table.HeaderCell>View Answers</Table.HeaderCell>\r\n          <Table.HeaderCell>Tags</Table.HeaderCell>\r\n          <Table.HeaderCell>Points</Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n      <Table.Body>\r\n        {questions.map((question) => {\r\n          return (\r\n            <QuestionRow\r\n              id={question.id}\r\n              title={question.title}\r\n              content={question.content}\r\n              numOfAnswers={question.answers.length}\r\n            />\r\n          );\r\n        })}\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default QuestionManager","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestion.js",["98"],"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\QuestionManager\\QuestionRow.js",[],"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\EmailForm.js",[],"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\NewTest\\NewTestForm\\NewTestForm.js",["99","100"],"import { useState, useEffect } from 'react';\r\nimport { Header, Form } from 'semantic-ui-react';\r\nimport TextEditor from '../../UI/TextEditor/TextEditor';\r\nimport getFieldsService from '../../../services/getFieldsService';\r\n\r\nconst NewTestForm = (props) => {\r\n  const [fields, setFields] = useState([]);\r\n  const languageOptions = [\r\n    { key: 'hebrew', value: 'hebrew', text: 'Hebrew' },\r\n    { key: 'english', value: 'english', text: 'English' }\r\n  ];\r\n\r\n  useEffect(async () => {\r\n    var fieldsData = await getFieldsService.getFields();\r\n    fieldsData.data.map((f) => {\r\n      setFields((prevState) => [\r\n        ...prevState,\r\n        { key: f.fieldName, value: f.fieldName, text: f.fieldName }\r\n      ]);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Form>\r\n      <Header textAlign=\"left\">\r\n        Field:\r\n        <Form.Select\r\n          error={props.fieldError}\r\n          selection\r\n          placeholder=\"Select a Field\"\r\n          options={fields}\r\n          onChange={(e) => props.setField(e.target.innerText)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Language:\r\n        <Form.Select\r\n          error={props.languageError}\r\n          selection\r\n          placeholder=\"Select a Language\"\r\n          options={languageOptions}\r\n          onChange={(e) => props.setLenguage(e.target.innerText)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Test Name:\r\n        <Form.Input\r\n          error={props.nameError}\r\n          fluid\r\n          placeholder=\"Test Name\"\r\n          onChange={(e) => props.setName(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Creater Email:\r\n        <Form.Input\r\n          error={props.emailError}\r\n          fluid\r\n          placeholder=\"Email\"\r\n          onChange={(e) => props.setEmail(e.target.value)}\r\n        />\r\n      </Header>\r\n      <Header textAlign=\"left\">\r\n        Passing Grade:\r\n        <Form.Input\r\n          error={props.passingGradeError}\r\n          fluid\r\n          type=\"Number\"\r\n          onChange={(e) => props.setPassingGrade(e.target.value)}\r\n        />\r\n      </Header>\r\n      <div className=\"wysiwyg-input\">\r\n        <Header textAlign=\"left\" as=\"h2\">\r\n          Header\r\n        </Header>\r\n        <TextEditor\r\n          editorState={props.header}\r\n          setEditorState={props.setHeader}\r\n        />\r\n      </div>\r\n      <div className=\"wysiwyg-input\">\r\n        <Header textAlign=\"left\" as=\"h2\">\r\n          Message to show on success:\r\n        </Header>\r\n        <TextEditor\r\n          editorState={props.successMsg}\r\n          setEditorState={props.setSuccessMsg}\r\n        />\r\n      </div>\r\n      <div className=\"wysiwyg-input\">\r\n        <Header textAlign=\"left\" as=\"h2\">\r\n          Message to show on failure:\r\n        </Header>\r\n        <TextEditor\r\n          editorState={props.failMsg}\r\n          setEditorState={props.setFailMsg}\r\n        />\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default NewTestForm;\r\n","C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\services\\newTestService.js",[],"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\services\\allTestsService.js",[],"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\TestManager\\TestRow\\TestRow.js",[],"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\services\\questionService.ts",[],["101","102"],"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\NewQuestion\\NewQuestionForm.js",["103","104"],"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\NewTest\\EmailForm\\emailTamplate.js",[],"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\services\\getFieldsService.js",[],"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\services\\httpService.js",[],"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\UI\\TextEditor\\TextEditor.js",[],"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\components\\Answer\\Answer.js",[],"C:\\Users\\user\\Downloads\\סלע\\יהלום\\Project\\Project\\QuizManager\\client\\src\\environments\\environment.js",["105"],"export default {\r\n  serverUrl: \"http://localhost:4000\",\r\n};\r\n",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":9,"column":13,"nodeType":"116","endLine":14,"endColumn":4},{"ruleId":"117","severity":1,"message":"118","line":11,"column":31,"nodeType":"116","messageId":"119","endLine":11,"endColumn":33},{"ruleId":"110","severity":1,"message":"120","line":6,"column":21,"nodeType":"112","messageId":"113","endLine":6,"endColumn":33},{"ruleId":"110","severity":1,"message":"121","line":7,"column":8,"nodeType":"112","messageId":"113","endLine":7,"endColumn":23},{"ruleId":"114","severity":1,"message":"115","line":13,"column":13,"nodeType":"116","endLine":21,"endColumn":4},{"ruleId":"117","severity":1,"message":"118","line":15,"column":29,"nodeType":"116","messageId":"119","endLine":15,"endColumn":31},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"122","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"123","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"125","line":1,"column":1,"nodeType":"126","endLine":3,"endColumn":3},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'setQuestions' is assigned a value but never used.","'QuestionManager' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]
>>>>>>> 43ad6370cc05b1e24619f5d8a9f65b17eef0d6f8
